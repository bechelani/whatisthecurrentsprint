trigger:
- main

variables:
  tag: '$(Build.BuildId)'
  containerRegistry: 'mbbacr'

stages:

- stage: Build
  displayName: Build and push stage

  jobs:
  - job: web_build
    displayName: Build Web

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/web'
      buildContextPath: '$(Build.SourcesDirectory)'
      dockerfilePath: '$(buildContextPath)/src/Web/Dockerfile'

    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: |
          $(containerRegistry)

    - task: Docker@2
      displayName: Build image
      inputs:
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        buildContext: $(buildContextPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(containerRegistry)
        repository: $(imageRepository)
        command: push
        tags: |
          $(tag)

  - job: admin_build
    displayName: Build Admin

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/admin'
      buildContextPath: '$(Build.SourcesDirectory)'
      dockerfilePath: '$(buildContextPath)/src/Admin/Dockerfile'

    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: |
          $(containerRegistry)

    - task: Docker@2
      displayName: Build image
      inputs:
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        buildContext: $(buildContextPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(containerRegistry)
        repository: $(imageRepository)
        command: push
        tags: |
          $(tag)

  - job: functionApp_build
    displayName: Build FunctionApp

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/functionapp'
      buildContextPath: '$(Build.SourcesDirectory)'
      dockerfilePath: '$(buildContextPath)/src/FunctionApp/Dockerfile'

    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: |
          $(containerRegistry)

    - task: Docker@2
      displayName: Build image
      inputs:
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        buildContext: $(buildContextPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(containerRegistry)
        repository: $(imageRepository)
        command: push
        tags: |
          $(tag)

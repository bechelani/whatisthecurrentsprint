trigger:
- main

variables:
  tag: '$(Build.BuildId)'
  containerRegistry: 'mbbacr'

stages:

- stage: Build
  displayName: Build and push stage

  jobs:
  - job: web_build
    displayName: Build Web

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/web'
      buildContextPath: '$(Build.SourcesDirectory)'
      dockerfilePath: '$(buildContextPath)/src/Web/Dockerfile'

    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: |
          $(containerRegistry)

    - task: Docker@2
      displayName: Build image
      inputs:
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        buildContext: $(buildContextPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(containerRegistry)
        repository: $(imageRepository)
        command: push
        tags: |
          $(tag)

  - job: admin_build
    displayName: Build Admin

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/admin'
      buildContextPath: '$(Build.SourcesDirectory)'
      dockerfilePath: '$(buildContextPath)/src/Admin/Dockerfile'

    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: |
          $(containerRegistry)

    - task: Docker@2
      displayName: Build image
      inputs:
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        buildContext: $(buildContextPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(containerRegistry)
        repository: $(imageRepository)
        command: push
        tags: |
          $(tag)

  - job: functionApp_build
    displayName: Build FunctionApp

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/functionapp'
      buildContextPath: '$(Build.SourcesDirectory)'
      dockerfilePath: '$(buildContextPath)/src/FunctionApp/Dockerfile'

    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: |
          $(containerRegistry)

    - task: Docker@2
      displayName: Build image
      inputs:
        repository: $(imageRepository)
        command: build
        Dockerfile: $(dockerfilePath)
        buildContext: $(buildContextPath)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: |
          $(containerRegistry)
        repository: $(imageRepository)
        command: push
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy

  variables:
    containerRegistry: mbbacr.azurecr.io
    # azureSubscription: 'Sandbox (63a92080-67fa-42c3-8276-13598194bce2)'
    tag: '$(Build.BuildId)'

  jobs:
  - job: web_deploy
    displayName: Deploy Web

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/web'
      appName: 'mbb-git-test-wa'

    steps:
      ## Add the below snippet at the end of your pipeline
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: 'Sandbox (63a92080-67fa-42c3-8276-13598194bce2)'
        appName: $(appName)
        imageName: $(containerRegistry)/$(imageRepository):$(tag)

  - job: admin_deploy
    displayName: Deploy Admin

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/admin'
      appName: 'mbb-git-test-admin-wa'

    steps:
      ## Add the below snippet at the end of your pipeline
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: 'Sandbox (63a92080-67fa-42c3-8276-13598194bce2)'
        appName: $(appName)
        imageName: $(containerRegistry)/$(imageRepository):$(tag)

  - job: functionApp_deploy
    displayName: Deploy FunctionApp

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      imageRepository: 'whatisthecurrentsprint/functionapp'
      appName: 'mbb-git-test-fa'

    steps:
      ## Add the below snippet at the end of your pipeline
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: 'Sandbox (63a92080-67fa-42c3-8276-13598194bce2)'
        appName: $(appName)
        imageName: $(containerRegistry)/$(imageRepository):$(tag)
